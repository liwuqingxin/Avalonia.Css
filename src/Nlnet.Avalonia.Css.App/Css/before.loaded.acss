/* Window */
Window#RootWindow{
    Width:1200;
    Height:800;
    Topmost:True;
    WindowStartupLocation:CenterScreen;
    [[
        Window > Grid{
            Margin:8,8,0,0;
        }
        Window > Grid > StackPanel{
            Spacing:8;
            Margin:0,0,0,8;
            HorizontalAlignment:Right;
        }
        Window > Grid > StackPanel > CheckBox#CbxIsEnabled{
            IsChecked:True;
            IsThreeState:False;
        }
        Window Border#PageIconBorder{
            Background:var(control-back);
            BorderBrush:var(control-border);
            BorderThickness:1;
            CornerRadius:6;
            Padding:8;
        }
        Window Icon#PageIcon{
            Height:64;
            Width:64;
        }
        Window TextBlock#PageName{
            FontSize:32;
            VerticalAlignment:Center;
            Margin:16,0;            
        }
        Window TextBlock#PageDescription{
            LineHeight:24;
        }
    ]]
}


/* Content Border of main TabControl */
TabControl#MainTabControl /template/ Border#PART_ContentBorder{
    Background:#F9F9F9;
    BorderThickness:1,1,0,0;
    BorderBrush:var(control-border);
    CornerRadius:8,0,0,0;
    Padding:24,24,4,0;
    Margin:8,0,0,0;
}
TabControl#MainTabControl ScrollViewer#MainContentScrollViewer{
    Margin:0,20,0,0;
}
TabControl#MainTabControl ScrollViewer#MainContentScrollViewer > ContentControl{
    Margin:0,0,12,0;
}
TabControl#MainTabControl /template/ ItemsPresenter#PART_ItemsPresenter > StackPanel{
    MinWidth:250;
}


/* TabItem in main TabControl */
TabItem{
    ClipToBounds:False;
}
TabItem ContentControl{
    ClipToBounds:False;
}
TabItem Icon{
    Opacity:0;
    Width:24;
    Height:24;
    Margin:16,0,0,0;
    [[
        Icon:is-loaded{
            [[
                :animation[desc=Svg icon loading animation]{
                    IterationCount:1;
                    Duration:'0:0:0.16';
                    FillMode:Forward;
                    Delay:'0:0:0';
                    KeyFrames:[
                        KeyFrame(0% 0,0.2,0.8,1):[
                            Opacity:0;
                            TranslateTransform.Y(RhythmicTransformAnimator):16;
                        ]
                        KeyFrame(100% 0,0.2,0.8,1):[
                            Opacity:1;
                            TranslateTransform.Y(RhythmicTransformAnimator):0;
                        ]
                    ]
                }
            ]]
        }
    ]]
}


/* CodeEditor */
CodeEditor{
    SelectionBrush:var(Accent02);
    CaretBrush:Black;
    Padding:6;
    BorderThickness:0;
}
/* Case */
Case{
    [[
        Case /template/ TextBlock#Header{
            Margin:0,8,0,16;
        }
        Case /template/ Border#ContentBack{
            Background:var(window-back);
            BorderBrush:var(contorl-border);
            MinHeight:80;
        }
        Case /template/ TextBlock#Instruction{
            Margin:12,12,12,4;
        }
        Case /template/ TextBlock:is-part#SourceCodeTitle{
            HorizontalAlignment:Left;
        }
    ]]
}
/* StackPanel followed Case */
Case > StackPanel{
    Spacing:8;
}


:is(UserControl) > StackPanel{
    Spacing:24;
    Margin:0,0,0,12;
}


/* Source Code Background */
Expander#SourceCodeExpander /template/ Border:is-part#ExpanderContent{
    Background:var(window-back);
}
ToggleButton#ExpanderHeader /template/ ContentPresenter#PART_ContentPresenter{
    HorizontalAlignment:Left;
}


/* Button in ButtonPage */
ButtonPage Button:not(:is-part), ButtonPage RepeatButton:not(:is-part), ButtonPage ButtonSpinner:not(:is-part), ButtonPage DropDownButton:not(:is-part), ButtonPage ToggleButton:not(:is-part){
    HorizontalAlignment:Left;
}

CalendarPage Calendar, CalendarPage CalendarDatePicker, CalendarPage TimePicker{
    HorizontalAlignment:Left;
}

CheckBoxPage CheckBox, CheckBoxPage RadioButton{
    HorizontalAlignment:Left;
}

TextBoxPage TextBox{
    HorizontalAlignment:Left;
}