base ./Bases/Bases.acss;

^Expander @extend(.box){
    Opacity: 1;
    RenderTransform: none;
    ClipToBounds:False;
    IsTabStop:false;

    [[
        :pressed{
            BorderBrush: var(fluent-ctrl-border-pressed);
        }
        
        /* Use animation for content translation */
        :expanded /template/ LayoutTransformControl#ExpanderContentLayoutRoot{
            RenderTransform: translate(0,-10px);
            [[
                ::animation{
                    FillMode:Forward;
                    IterationCount:1;
                    Duration:'0:0:0.4';
                    KeyFrames:[
                        KeyFrame:(0%)[
                            TranslateTransform.Y : -4;
                        ]
                        KeyFrame:(0:0:0.15)[
                            TranslateTransform.Y : -4;
                        ]
                        KeyFrame:(100% .4,.6,.4,.6)[
                            TranslateTransform.Y : 0;
                        ]
                    ]
                }
            ]]
        }

        /* Content Border */
        :up /template/ Border#ExpanderContent{
            BorderThickness:1,1,1,0;
        }
        :down /template/ Border#ExpanderContent{
            BorderThickness:1,0,1,1;
        }
        :left /template/ Border#ExpanderContent{
            BorderThickness:1,1,0,1;
        }
        :right /template/ Border#ExpanderContent{
            BorderThickness:0,1,1,1;
        }

        /* Transforms */
         /template/ LayoutTransformControl#ExpanderContentLayoutRoot{
            LayoutTransform:scale(1,0);
            RenderTransformOrigin:0%,0%;
            Opacity:0;
            Transitions:[
                TransformOperationsTransition(LayoutTransformControl.LayoutTransform 0.24 0 .4,.9,.4,.9);
                var(stOpacity);
            ]
        }
        :left /template/ LayoutTransformControl#ExpanderContentLayoutRoot{
            LayoutTransform:scale(0,1);
        }
        :right /template/ LayoutTransformControl#ExpanderContentLayoutRoot{
            LayoutTransform:scale(0,1);
        }
        :expanded /template/ LayoutTransformControl#ExpanderContentLayoutRoot{
            LayoutTransform: scale(1,1);
            Opacity:1;
        }

        /template/ ContentPresenter#PART_ContentPresenter{
            Opacity:0;
            IsVisible: false;
            Transitions:[
                DoubleTransition(TemplatedControl.Opacity 0.125 0.2);
            ]
        }
        :expanded /template/ ContentPresenter#PART_ContentPresenter{
            Opacity:1;
            IsVisible: true;
        }

        :left{
            HorizontalAlignment:Left;
        }
        :right{
            HorizontalAlignment:Right;
        }
    ]]
}

Expander{
    [[
        /template/ ToggleButton:is-part Border#ToggleButtonBackground{
            HorizontalAlignment:Stretch;
            VerticalAlignment:Stretch;
            BorderBrush:var(ctrl-border);
            Transitions:[
                var(stBackground);
                var(stCornerRadius)
            ]
        }
        /template/ ToggleButton:pointerover Border#ToggleButtonBackground{
            Background: var(ctrl-back-hover);
            BorderBrush:var(fluent-ctrl-border);
        }
        /template/ ToggleButton:pressed Border#ToggleButtonBackground{
            BorderBrush:var(fluent-ctrl-border-pressed);
        }


        /* Expand Collapse Chevron */
        /template/ ToggleButton:is-part#ExpanderHeader Path#ExpandCollapseChevron{
            VerticalAlignment:Center;
            Stroke:var(fore);
            StrokeThickness:1;
            Stretch:Uniform;
            Margin:8,0;
            Transitions:[
                var(stRenderTransform);
            ]
        }
        :up /template/ ToggleButton:is-part#ExpanderHeader Path#ExpandCollapseChevron{
            Data:M 0 7 L 7 0 L 14 7;
            Width:9;
        }
        :down /template/ ToggleButton:is-part#ExpanderHeader Path#ExpandCollapseChevron{
            Data:M 0 0 L 7 7 L 14 0;
            Width:9;
        }
        :left /template/ ToggleButton:is-part#ExpanderHeader Path#ExpandCollapseChevron{
            Data:M 7 0 L 0 7 L 7 14;
            Height:9;
        }
        :right /template/ ToggleButton:is-part#ExpanderHeader Path#ExpandCollapseChevron{
            Data:M 0 0 L 7 7 L 0 14;
            Height:9;
        }


        /* pressed */
        :up /template/ ToggleButton#ExpanderHeader:pressed Path#ExpandCollapseChevron{
            RenderTransform: translate(0, -3px);
        }
        :down /template/ ToggleButton#ExpanderHeader:pressed Path#ExpandCollapseChevron{
            RenderTransform: translate(0, 3px);
        }
        :left /template/ ToggleButton#ExpanderHeader:pressed Path#ExpandCollapseChevron{
            RenderTransform: translate(-3px, 0);
        }
        :right /template/ ToggleButton#ExpanderHeader:pressed Path#ExpandCollapseChevron{
            RenderTransform: translate(3px, 0);
        }


        /* expand */
        :up /template/ ToggleButton#ExpanderHeader:checked Path#ExpandCollapseChevron{
            RenderTransform: scale(1,-1);
        }
        :down /template/ ToggleButton#ExpanderHeader:checked Path#ExpandCollapseChevron{
            RenderTransform: scale(1,-1);
        }
        :left /template/ ToggleButton#ExpanderHeader:checked Path#ExpandCollapseChevron{
            RenderTransform: scale(-1,1);
        }
        :right /template/ ToggleButton#ExpanderHeader:checked Path#ExpandCollapseChevron{
            RenderTransform: scale(-1,1);
        }


        /* Change layout when direction is left. */
        :left /template/ ToggleButton#ExpanderHeader ContentPresenter#PART_ContentPresenter:is-part{
            Grid.Column:1;
        }
        :left /template/ ToggleButton#ExpanderHeader Border#ExpandCollapseChevronBorder:is-part{
            Grid.Column:0;
        }
    ]]
}